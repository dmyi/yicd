给出两个 非空 的链表用来表示两个非负的整数。其中，它们各自的位数是按照 逆序 的方式存储的，并且它们的每个节点只能存储 一位 数字。

如果，我们将这两个数相加起来，则会返回一个新的链表来表示它们的和。

您可以假设除了数字 0 之外，这两个数都不会以 0 开头。

示例：

输入：(2 -> 4 -> 3) + (5 -> 6 -> 4)
输出：7 -> 0 -> 8
原因：342 + 465 = 807

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/add-two-numbers
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

解题思路
首先，只要是两个链表有任一个不为NULL则循环不止；
定义head,head2分别保存两个链表的头节点，题目说是两个非空链表，head2是为了处理最后一位有进位的情况；
情况1，两个链表都不为空的循环处理，注意处理下一节点同时为空的进位处理，保存到head2；
情况2，l1不为空，l2为空的情况处理，注意l1下个节点为空处理进位；
情况3，l1为空，l2为空的情况处理，注意l2下个节点为空时的进位处理，因为如果都为NULL,则不再循环。
代码
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* addTwoNumbers(struct ListNode* l1, struct ListNode* l2){

    struct ListNode *head = l1;
    struct ListNode *head2 = l2;
    struct ListNode *cur = NULL;
    int inc = 0;
    int res = 0;

    while(l1 != NULL || l2 != NULL) {

        if(l1 != NULL && l2 != NULL) {
            res = (l1->val + l2->val + inc) % 10;
            inc = (l1->val + l2->val + inc) / 10;

            if(l1 == head) {
                cur = head;
                cur->val = res;
            } else {
                cur = cur->next = l1;
                cur->val = res;
            }
            l1 = l1->next;
            l2 = l2->next;

            if(l1 == NULL && l2 == NULL) {
                if(inc == 1) {
                    cur->next = head2;
                    head2->val = 1;
                    head2->next = NULL;
                }
            }
        } else if(l1 != NULL && l2 == NULL) {
            res = (l1->val + inc) % 10;
            inc = (l1->val + inc) / 10;

            cur = cur->next = l1;
            cur->val = res;
            l1 = l1->next;
            if(l1 == NULL) {
                if(inc == 1) {
                    cur->next = head2;
                    head2->val = 1;
                    head2->next = NULL;
                }
            }
        } else if(l1 == NULL && l2 != NULL) {
            res = (l2->val + inc) % 10;
            inc = (l2->val + inc) / 10;

            cur = cur->next = l2;
            cur->val = res;
            l2 = l2->next;
            if(l2 == NULL) {
                if(inc == 1) {
                    cur->next = head2;
                    head2->val = 1;
                    head2->next = NULL;
                }
            }
        } 
    }
    return head;
}

作者：dmyi
链接：https://leetcode-cn.com/problems/add-two-numbers/solution/2-liang-shu-xiang-jia-ti-jie-by-dmyi/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。

