给定一个二叉树，找出其最小深度。

最小深度是从根节点到最近叶子节点的最短路径上的节点数量。

说明: 叶子节点是指没有子节点的节点。

示例:

给定二叉树 [3,9,20,null,null,15,7],

    3
   / \
  9  20
    /  \
   15   7
返回它的最小深度  2.

来源：力扣（LeetCode）
链接：https://leetcode-cn.com/problems/minimum-depth-of-binary-tree
著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。

解题思路
采用类似求最大深度的递归方式实现；
若左节点执行返回值为0，则返回右节点值加1，否则反之；
默认返回left_depth,right_depth中小的值。
代码
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */


int minDepth(struct TreeNode* root){
    int left_depth,right_depth;
    left_depth = right_depth = 0;

    if(root == NULL) {
        return 0;
    } else {
        left_depth = minDepth(root->left);
        right_depth = minDepth(root->right);
        if(left_depth == 0) {
            return right_depth + 1;
        } else if(right_depth == 0) {
            return left_depth + 1;
        } else {
            return (left_depth <= right_depth) ? (left_depth + 1) : (right_depth + 1);
        }   
    }
}

作者：dmyi
链接：https://leetcode-cn.com/problems/minimum-depth-of-binary-tree/solution/111-er-cha-shu-de-zui-xiao-shen-du-ti-jie-by-dmyi/
来源：力扣（LeetCode）
著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。
